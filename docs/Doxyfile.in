# 安装doxygen
# sudo apt install doxygen
# sudo apt install graphviz（生成dot需要）

# 项目名称,将作为于所生成的程序文档首页标题
PROJECT_NAME           = "@PROJECT_NAME@"
# 文档版本号,可对应于项目版本号,譬如svn\cvs所生成的项目版本号

PROJECT_NUMBER         = @DOXYGEN_MAJOR@.@DOXYGEN_MINOR@.@DOXYGEN_PATCH@
PROJECT_BRIEF          = "xxx"
# 程序文档输出目录
# OUTPUT_DIRECTORY     =  docs
STRIP_FROM_PATH        = @PROJECT_SOURCE_DIR@ \
                         @PROJECT_BINARY_DIR@
# 程序文档输入目录 
INPUT                  = @DOXY_MAIN_PAGE@ \
                         @PROJECT_SOURCE_DIR@/libs \
                         @PROJECT_SOURCE_DIR@/src
#                         @PROJECT_BINARY_DIR@
# 程序文档语言环境
# OUTPUT_LANGUAGE      = 
DOXYFILE_ENCODING  = UTF-8

# 只对头文件中的文档化信息生成程序文档 
FILE_PATTERNS          = *.h \
                         *.cpp
# 递归遍历当前目录的子目录,寻找被文档化的程序源文件
RECURSIVE              = YES
# 如果是制作 C 程序文档，该选项必须设为 YES，否则默认生成 C++ 文档格式
OPTIMIZE_OUTPUT_FOR_C  = NO

#提取信息，包含类的私有数据成员和静态成员
EXTRACT_ALL            = YES
EXTRACT_PRIVATE        = YES
EXTRACT_STATIC         = YES

# 对于使用typedef定义的结构体、枚举、联合等数据类型
# 只按照typedef定义的类型名进行文档化
TYPEDEF_HIDES_STRUCT  = YES
# 在C++程序文档中,该值可以设置为NO
# 在C程序文档中,由于C语言没有所谓的域/名字空间这样的概念,所以此处设置为YES
HIDE_SCOPE_NAMES      = NO
# 让doxygen静悄悄地为你生成文档,只有出现警告或错误时,才在终端输出提示信息
QUIET  = YES
# 递归遍历示例程序目录的子目录，寻找被文档化的程序源文件
EXAMPLE_RECURSIVE      = NO

# 允许程序文档中显示本文档化的函数相互调用关系
REFERENCED_BY_RELATION = YES
REFERENCES_RELATION    = YES
REFERENCES_LINK_SOURCE = YES

# 生成latex格式的程序文档
GENERATE_LATEX        = NO

# 在程序文档中允许以图例形式显示函数调用关系
# 前提是你已经安装了graphviz软件包
HAVE_DOT              = YES
CALL_GRAPH            = YES
CALLER_GRAPH          = YES

# 在最后生成的文档中，把所有的源代码包含在其中
SOURCE_BROWSER        = NO
# 这会在HTML文档中，添加一个侧边栏，并以树状结构显示包、类、接口等的关系
GENERATE_HTML         = YES
GENERATE_TREEVIEW    = YES

EXCLUDE_PATTERNS       = */thirdparty/*
USE_MDFILE_AS_MAINPAGE = @DOXY_MAIN_PAGE@

